// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.8
// source: proto/news.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type News struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Date          string                 `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *News) Reset() {
	*x = News{}
	mi := &file_proto_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *News) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*News) ProtoMessage() {}

func (x *News) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use News.ProtoReflect.Descriptor instead.
func (*News) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{0}
}

func (x *News) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *News) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *News) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *News) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *News) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CreateNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewsId        string                 `protobuf:"bytes,1,opt,name=news_id,json=newsId,proto3" json:"news_id,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewsRequest) Reset() {
	*x = CreateNewsRequest{}
	mi := &file_proto_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsRequest) ProtoMessage() {}

func (x *CreateNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsRequest.ProtoReflect.Descriptor instead.
func (*CreateNewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewsRequest) GetNewsId() string {
	if x != nil {
		return x.NewsId
	}
	return ""
}

func (x *CreateNewsRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreateNewsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNewsRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type NewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          *News                  `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsResponse) Reset() {
	*x = NewsResponse{}
	mi := &file_proto_news_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsResponse) ProtoMessage() {}

func (x *NewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsResponse.ProtoReflect.Descriptor instead.
func (*NewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{2}
}

func (x *NewsResponse) GetNews() *News {
	if x != nil {
		return x.News
	}
	return nil
}

type NewsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          []*News                `protobuf:"bytes,1,rep,name=news,proto3" json:"news,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsList) Reset() {
	*x = NewsList{}
	mi := &file_proto_news_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsList) ProtoMessage() {}

func (x *NewsList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsList.ProtoReflect.Descriptor instead.
func (*NewsList) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{3}
}

func (x *NewsList) GetNews() []*News {
	if x != nil {
		return x.News
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_news_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{4}
}

var File_proto_news_proto protoreflect.FileDescriptor

const file_proto_news_proto_rawDesc = "" +
	"\n" +
	"\x10proto/news.proto\x12\x05proto\"\x7f\n" +
	"\x04News\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\x12\x12\n" +
	"\x04date\x18\x05 \x01(\tR\x04date\"\x81\x01\n" +
	"\x11CreateNewsRequest\x12\x17\n" +
	"\anews_id\x18\x01 \x01(\tR\x06newsId\x12\x1b\n" +
	"\timage_url\x18\x02 \x01(\tR\bimageUrl\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"/\n" +
	"\fNewsResponse\x12\x1f\n" +
	"\x04news\x18\x01 \x01(\v2\v.proto.NewsR\x04news\"+\n" +
	"\bNewsList\x12\x1f\n" +
	"\x04news\x18\x01 \x03(\v2\v.proto.NewsR\x04news\"\a\n" +
	"\x05Empty2t\n" +
	"\vNewsService\x12;\n" +
	"\n" +
	"CreateNews\x12\x18.proto.CreateNewsRequest\x1a\x13.proto.NewsResponse\x12(\n" +
	"\aGetNews\x12\f.proto.Empty\x1a\x0f.proto.NewsListB\tZ\a./protob\x06proto3"

var (
	file_proto_news_proto_rawDescOnce sync.Once
	file_proto_news_proto_rawDescData []byte
)

func file_proto_news_proto_rawDescGZIP() []byte {
	file_proto_news_proto_rawDescOnce.Do(func() {
		file_proto_news_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_news_proto_rawDesc), len(file_proto_news_proto_rawDesc)))
	})
	return file_proto_news_proto_rawDescData
}

var file_proto_news_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_news_proto_goTypes = []any{
	(*News)(nil),              // 0: proto.News
	(*CreateNewsRequest)(nil), // 1: proto.CreateNewsRequest
	(*NewsResponse)(nil),      // 2: proto.NewsResponse
	(*NewsList)(nil),          // 3: proto.NewsList
	(*Empty)(nil),             // 4: proto.Empty
}
var file_proto_news_proto_depIdxs = []int32{
	0, // 0: proto.NewsResponse.news:type_name -> proto.News
	0, // 1: proto.NewsList.news:type_name -> proto.News
	1, // 2: proto.NewsService.CreateNews:input_type -> proto.CreateNewsRequest
	4, // 3: proto.NewsService.GetNews:input_type -> proto.Empty
	2, // 4: proto.NewsService.CreateNews:output_type -> proto.NewsResponse
	3, // 5: proto.NewsService.GetNews:output_type -> proto.NewsList
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_news_proto_init() }
func file_proto_news_proto_init() {
	if File_proto_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_news_proto_rawDesc), len(file_proto_news_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_news_proto_goTypes,
		DependencyIndexes: file_proto_news_proto_depIdxs,
		MessageInfos:      file_proto_news_proto_msgTypes,
	}.Build()
	File_proto_news_proto = out.File
	file_proto_news_proto_goTypes = nil
	file_proto_news_proto_depIdxs = nil
}
