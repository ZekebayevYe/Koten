// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: proto/document.proto

package documentpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_proto_document_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UploadRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_proto_document_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *UploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_proto_document_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{2}
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DocumentID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentID) Reset() {
	*x = DocumentID{}
	mi := &file_proto_document_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentID) ProtoMessage() {}

func (x *DocumentID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentID.ProtoReflect.Descriptor instead.
func (*DocumentID) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{3}
}

func (x *DocumentID) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type DocumentContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentContent) Reset() {
	*x = DocumentContent{}
	mi := &file_proto_document_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentContent) ProtoMessage() {}

func (x *DocumentContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentContent.ProtoReflect.Descriptor instead.
func (*DocumentContent) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentContent) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DocumentContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type DeleteStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStatus) Reset() {
	*x = DeleteStatus{}
	mi := &file_proto_document_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStatus) ProtoMessage() {}

func (x *DeleteStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStatus.ProtoReflect.Descriptor instead.
func (*DeleteStatus) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_proto_document_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{6}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Document) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Document) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DocumentList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentList) Reset() {
	*x = DocumentList{}
	mi := &file_proto_document_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentList) ProtoMessage() {}

func (x *DocumentList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentList.ProtoReflect.Descriptor instead.
func (*DocumentList) Descriptor() ([]byte, []int) {
	return file_proto_document_proto_rawDescGZIP(), []int{7}
}

func (x *DocumentList) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

var File_proto_document_proto protoreflect.FileDescriptor

const file_proto_document_proto_rawDesc = "" +
	"\n" +
	"\x14proto/document.proto\x12\bdocument\"r\n" +
	"\rUploadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"I\n" +
	"\x0eUploadResponse\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"&\n" +
	"\vUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"-\n" +
	"\n" +
	"DocumentID\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\"G\n" +
	"\x0fDocumentContent\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\"&\n" +
	"\fDeleteStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"i\n" +
	"\bDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"@\n" +
	"\fDocumentList\x120\n" +
	"\tdocuments\x18\x01 \x03(\v2\x12.document.DocumentR\tdocuments2\x86\x02\n" +
	"\x0fDocumentService\x12;\n" +
	"\x06Upload\x12\x17.document.UploadRequest\x1a\x18.document.UploadResponse\x12A\n" +
	"\x10GetUserDocuments\x12\x15.document.UserRequest\x1a\x16.document.DocumentList\x12;\n" +
	"\bDownload\x12\x14.document.DocumentID\x1a\x19.document.DocumentContent\x126\n" +
	"\x06Delete\x12\x14.document.DocumentID\x1a\x16.document.DeleteStatusB\x14Z\x12./proto;documentpbb\x06proto3"

var (
	file_proto_document_proto_rawDescOnce sync.Once
	file_proto_document_proto_rawDescData []byte
)

func file_proto_document_proto_rawDescGZIP() []byte {
	file_proto_document_proto_rawDescOnce.Do(func() {
		file_proto_document_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_document_proto_rawDesc), len(file_proto_document_proto_rawDesc)))
	})
	return file_proto_document_proto_rawDescData
}

var file_proto_document_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_document_proto_goTypes = []any{
	(*UploadRequest)(nil),   // 0: document.UploadRequest
	(*UploadResponse)(nil),  // 1: document.UploadResponse
	(*UserRequest)(nil),     // 2: document.UserRequest
	(*DocumentID)(nil),      // 3: document.DocumentID
	(*DocumentContent)(nil), // 4: document.DocumentContent
	(*DeleteStatus)(nil),    // 5: document.DeleteStatus
	(*Document)(nil),        // 6: document.Document
	(*DocumentList)(nil),    // 7: document.DocumentList
}
var file_proto_document_proto_depIdxs = []int32{
	6, // 0: document.DocumentList.documents:type_name -> document.Document
	0, // 1: document.DocumentService.Upload:input_type -> document.UploadRequest
	2, // 2: document.DocumentService.GetUserDocuments:input_type -> document.UserRequest
	3, // 3: document.DocumentService.Download:input_type -> document.DocumentID
	3, // 4: document.DocumentService.Delete:input_type -> document.DocumentID
	1, // 5: document.DocumentService.Upload:output_type -> document.UploadResponse
	7, // 6: document.DocumentService.GetUserDocuments:output_type -> document.DocumentList
	4, // 7: document.DocumentService.Download:output_type -> document.DocumentContent
	5, // 8: document.DocumentService.Delete:output_type -> document.DeleteStatus
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_document_proto_init() }
func file_proto_document_proto_init() {
	if File_proto_document_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_document_proto_rawDesc), len(file_proto_document_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_document_proto_goTypes,
		DependencyIndexes: file_proto_document_proto_depIdxs,
		MessageInfos:      file_proto_document_proto_msgTypes,
	}.Build()
	File_proto_document_proto = out.File
	file_proto_document_proto_goTypes = nil
	file_proto_document_proto_depIdxs = nil
}
